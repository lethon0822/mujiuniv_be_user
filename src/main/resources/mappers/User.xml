<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.muziuniv_be_user.application.user.UserMapper">
    <select id="findStudentByUserId">
        SELECT u.user_id, u.login_id, u.user_name, s.grade, d.dept_name
        FROM user u
        JOIN student s
          ON u.user_id = s.user_id
        JOIN department d
          ON s.dept_id = d.dept_id
        WHERE u.user_id IN
        <foreach collection="userId" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="findUserInfoByUserId">
        SELECT
        u.user_id,
        u.user_name,
        COALESCE(dp.dept_name, ds.dept_name) AS dept_name
        FROM user u
        LEFT JOIN professor p
        ON u.user_id = p.user_id
        LEFT JOIN department dp
        ON p.dept_id = dp.dept_id
        LEFT JOIN student s
        ON u.user_id = s.user_id
        LEFT JOIN department ds
        ON s.dept_id = ds.dept_id
        WHERE u.user_id IN
        <foreach collection="userIdList" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

<!-- 유저 리스트 조회   -->
    <!-- MemberGetReq 의 필드명이 userRole, deptId, status, grade, gender, searchBy, q 라고 가정 -->
    <select id="findUser">

        <choose>

            <!-- 학생 -->
            <when test="userRole == 'student'">
                SELECT
                u.login_id   AS loginId,
                u.user_name  AS username,
                u.address    AS address,
                u.email      AS email,
                u.phone      AS phone,
                d.dept_name  AS deptName,
                s.grade      AS grade,
                s.status     AS status
                FROM `user` u
                JOIN student s        ON s.user_id = u.user_id
                LEFT JOIN department d ON d.dept_id = s.dept_id
                <where>
                    u.user_id &gt; 1
                    <if test="deptId != null">AND s.dept_id = #{deptId}</if>
                    <if test="grade != null"> AND s.grade  = #{grade}</if>
                    <if test="status != null and status != ''">AND s.status = #{status}</if>
                    <if test="gender != null and gender != ''">AND u.gender = #{gender}</if>
                    <if test="q != null and q != ''">
                        <choose>
                            <when test="searchBy == 'name'">    AND u.user_name LIKE CONCAT('%', #{q}, '%')</when>
                            <when test="searchBy == 'loginId'"> AND u.login_id  LIKE CONCAT('%', #{q}, '%')</when>
                            <when test="searchBy == 'email'">   AND u.email     LIKE CONCAT('%', #{q}, '%')</when>
                            <otherwise>
                                AND ( u.user_name LIKE CONCAT('%', #{q}, '%')
                                OR u.login_id  LIKE CONCAT('%', #{q}, '%')
                                OR u.email     LIKE CONCAT('%', #{q}, '%') )
                            </otherwise>
                        </choose>
                    </if>
                </where>
                ORDER BY u.user_id DESC
            </when>

            <!-- 교수 (기본) -->
            <otherwise>
                SELECT
                u.login_id   AS loginId,
                u.user_name  AS username,
                u.address    AS address,
                u.email      AS email,
                u.phone      AS phone,
                d.dept_name  AS deptName,
                p.status     AS status
                FROM `user` u
                JOIN professor p        ON p.user_id = u.user_id
                LEFT JOIN department d  ON d.dept_id = p.dept_id
                <where>
                    u.user_id &gt; 1
                    <if test="deptId != null">AND p.dept_id = #{deptId}</if>
                    <if test="status != null and status != ''">AND p.status = #{status}</if>
                    <if test="gender != null and gender != ''">AND u.gender = #{gender}</if>
                    <if test="q != null and q != ''">
                        <choose>
                            <when test="searchBy == 'name'">    AND u.user_name LIKE CONCAT('%', #{q}, '%')</when>
                            <when test="searchBy == 'loginId'"> AND u.login_id  LIKE CONCAT('%', #{q}, '%')</when>
                            <when test="searchBy == 'email'">   AND u.email     LIKE CONCAT('%', #{q}, '%')</when>
                            <otherwise>
                                AND ( u.user_name LIKE CONCAT('%', #{q}, '%')
                                OR u.login_id  LIKE CONCAT('%', #{q}, '%')
                                OR u.email     LIKE CONCAT('%', #{q}, '%') )
                            </otherwise>
                        </choose>
                    </if>
                </where>
                ORDER BY u.user_id DESC
            </otherwise>

        </choose>
    </select>

    <select id="findUserById">
        SELECT
        u.user_id       AS userId,
        u.login_id      AS loginId,
        u.user_name     AS userName,
        COALESCE(ds.dept_name, dp.dept_name) AS deptName,
        COALESCE(s.status, p.status, 1) AS status
        FROM `user` u
        LEFT JOIN student s     ON u.user_id = s.user_id
        LEFT JOIN department ds ON s.dept_id = ds.dept_id
        LEFT JOIN professor p   ON u.user_id = p.user_id
        LEFT JOIN department dp ON p.dept_id = dp.dept_id
        WHERE u.user_id = #{userId}
    </select>

<!-- 학과별 신입생 수 -->
    <select id="newStudents">
        SELECT COUNT(user_id) AS user, dept_name
        FROM student s
        JOIN department d
        ON s.dept_id = d.dept_id
        WHERE ent_date > '${year}-03-01'
        GROUP BY d.dept_id
        ORDER BY user DESC;
    </select>

</mapper>
